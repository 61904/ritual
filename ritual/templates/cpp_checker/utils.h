#ifndef UTILS_H
#define UTILS_H

// This header includes system headers and declares functions
// required by all regular headers of the library.

// for fixed size integer types
#include <stdint.h>

// for default cpp_checker tests
#include <iostream>
#include <assert.h>

// placement new statements require this
#include <new>

// for exit()
#include <cstdlib>

// original C++ library includes generated by cpp_to_rust
{include_directives_code}

#ifdef _WIN32
    #define RITUAL_EXPORT __declspec(dllexport)
#else
    #define RITUAL_EXPORT
#endif


// Calls destructor of `T` class. This template function
// is necessary because it's not possible to use `x->~T()`
// syntax directly if `T` contains `::`.
template<typename T>
void ritual_call_destructor(T* x) {{
    x->~T();
}}

#define ritual_assert(x) \
    if (!(x)) {{ \
        std::cout << "assertion failed: " << #x << "\n"; \
        exit(1); \
    }}

#endif // UTILS_H
